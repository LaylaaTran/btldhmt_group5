//===============================CHAU RUA TAY===============================
mat4 model_chaurua, model_view_chaurua;
float crcr[] = { 0,0,0 };
bool nuoc = false;

void day_chaurua(float x, float y, float z)
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(2.4, 0.2, 4.0));
	mat4 model_base = model_chaurua * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 0.05, 0.05, 0.81);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void thanh_chaurua(float x, float y, float z, float x1, float y1, float z1)
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(x1, y1, z1));
	mat4 model_base = model_chaurua * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 0.39, 0.39, 0.81);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void ongdannuoc_chaurua(float x, float y, float z, float x1, float y1, float z1)
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(x1, y1, z1));
	mat4 model_base = model_chaurua * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 0.66, 0.66, 0.66);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void voinuoc_chaurua(float x, float y, float z, float x1, float y1, float z1)
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(x1, y1, z1));
	mat4 model_base = model_chaurua * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 0.66, 0.66, 0.66);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void van_voinuoc_chaurua1(float x, float y, float z)
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(0.2, 0.2, 0.1));
	mat4 model_base = model_chaurua * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 1.0, 0.75, 0.5);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void van_voinuoc_chaurua2(float x, float y, float z)
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(0.1, 0.3, 0.1));
	mat4 model_base = model_chaurua * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 1.0, 0.75, 0.5);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void nuoc_chaurua(float x, float y, float z, float x1, float y1, float z1)
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(x1, y1, z1));
	mat4 model_base = model_chaurua * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 0.11, 0.56, 1.0);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void chaurua(float x, float y, float z, int goc)
{
	model_chaurua = translate(vec3(x, y, z)) * rotate_y(goc) * scale(vec3(0.8, 0.8, 0.8));
	day_chaurua(1.4, -2.0, -2.5);

	thanh_chaurua(0.6, -1.7, -2.5, 0.7, 0.4, 4.0);   // thanh trong to hon
	thanh_chaurua(2.45, -1.7, -2.5, 0.3, 0.4, 4.0);	  // thanh truoc be hon
	thanh_chaurua(1.65, -1.7, -0.6, 1.4, 0.4, 0.2);	  // thanh trai 
	thanh_chaurua(1.65, -1.7, -4.4, 1.4, 0.4, 0.2);	  // thanh phai

	ongdannuoc_chaurua(1.4, -2.6, -2.5, 0.3, 1.0, 0.3);  // ống nước dọc
	ongdannuoc_chaurua(0.75, -2.95, -2.5, 1.0, 0.3, 0.3);  // ống nước ngang

	voinuoc_chaurua(0.6, -1.4, -2.5, 0.3, 0.2, 1.2);   // chan de voi nuoc
	voinuoc_chaurua(0.61, -1.05, -2.5, 0.2, 0.5, 0.2);   // thanh doc 1 voi nuoc
	voinuoc_chaurua(1.0, -0.9, -2.5, 0.8, 0.2, 0.2);   // thanh ngang voi nuoc
	voinuoc_chaurua(1.3, -1.1, -2.5, 0.2, 0.2, 0.2);   // thanh doc 2 voi nuoc

	if (nuoc) {
		nuoc_chaurua(1.625, -1.8, -2.5, 1.35, 0.1, 3.6);
		nuoc_chaurua(1.3, -1.25, -2.5, 0.1, 0.1, 0.1);
		nuoc_chaurua(1.3, -1.5, -2.5, 0.1, 0.1, 0.1);
	}
	else nuoc_chaurua(0, 0, 0, 0, 0, 0);
	model_chaurua = model_chaurua * translate(vec3(0.6, -1.35, 0.0)) * rotate_z(crcr[0]) * translate(vec3(-0.6, 1.35, 0.0));
	van_voinuoc_chaurua1(0.6, -1.35, -1.85);
	van_voinuoc_chaurua2(0.6, -1.1, -1.85);
}

