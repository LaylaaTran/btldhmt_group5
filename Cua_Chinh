//============================CUA CHINH===============================
mat4 model_cuachinh;
float chch[] = { 0, 0, 0 };


void khung_cuachinh(float x, float y, float z, float x1, float y1, float z1) 
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(x1, y1, z1));
	mat4 model_base = model_cuachinh * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 0.7, 0.7, 0.7);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void thanh_doc(float x, float y, float z, float x1, float y1, float z1) 
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(x1, y1, z1));
	mat4 model_base = model_cuachinh * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 1.0, 1.0, 1.0);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void tay_nam(float x, float y, float z, float x1, float y1, float z1) 
{
	mat4 instance = identity_mat4();
	instance = translate(vec3(x, y, z)) * scale(vec3(x1, y1, z1));
	mat4 model_base = model_cuachinh * instance;
	glUniformMatrix4fv(model_mat_location, 1, GL_FALSE, model_base.m);
	glUniform3f(glGetUniformLocation(ProgramId, "objectColor"), 0.2, 0.2, 0.2);
	glDrawArrays(GL_TRIANGLES, 0, 36);
}

void cuachinh(float x, float y, float z, int goc)
{
	model_cuachinh = translate(vec3(x, y, z)) * rotate_y(goc) * scale(vec3(1.5, 1.5, 1.5));;
	model_cuachinh = model_cuachinh * translate(vec3(1.5, 0, 0)) * rotate_y(chch[0]) * translate(vec3(-1.5, 0, 0));
	khung_cuachinh(0, 0.0, 0.0, 3.0, 6.0, 0.2);
	for (int i = -2; i <= 2; ++i) {
		thanh_doc(i * 0.5, 0, -0.2, 0.1, 6.0, 0.1);
	}
	tay_nam(-0.8, 0, -0.2, 0.1, 1.0, 0.1);
}
